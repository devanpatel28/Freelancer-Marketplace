@model Freelancer_Marketplace.Entity.usersdata

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en"
      class="light-style customizer-hide"
      dir="ltr"
      data-theme="theme-default"
      data-assets-path="~/Content/assets/"
      data-template="horizontal-menu-template">
<head>
    <meta charset="utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

    <title>Register Cover - Pages</title>

    <meta name="description" content="" />

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="~/Content/assets/img/favicon/favicon.ico" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
          rel="stylesheet" />

    @Styles.Render("~/Content/maincss")
    @Scripts.Render("~/bundles/script1")
</head>

<body>
    <!-- Content -->

    <div class="authentication-wrapper authentication-cover authentication-bg">
        <div class="authentication-inner row">
            <!-- /Left Text -->
            <div class="d-none d-lg-flex col-lg-7 p-0">
                <div class="auth-cover-bg auth-cover-bg-color d-flex justify-content-center align-items-center">
                    <img src="~/Content/assets/img/illustrations/auth-register-illustration-light.png"
                         alt="auth-register-cover"
                         class="img-fluid my-5 auth-illustration"
                         data-app-light-img="~/Content/assets/img/illustrations/auth-register-illustration-light.png"
                         data-app-dark-img="~/Content/assets/img/illustrations/auth-register-illustration-dark.png" />

                    <img src="~/Content/assets/img/illustrations/bg-shape-image-light.png"
                         alt="auth-register-cover"
                         class="platform-bg"
                         data-app-light-img="~/Content/assets/img/illustrations/bg-shape-image-light.png"
                         data-app-dark-img="~/Content/assets/img/illustrations/bg-shape-image-dark.png" />
                </div>
            </div>
            <!-- /Left Text -->
            <!-- Register -->
            <div class="d-flex col-12 col-lg-5 align-items-center p-sm-5 p-4">
                <div class="w-px-400 mx-auto">
                    <!-- Logo -->
                    <div class="app-brand mb-4">
                        <a href="index.html" class="app-brand-link gap-2">
                            <span class="app-brand-logo demo">
                                <svg width="32" height="22" viewBox="0 0 32 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd"
                                          clip-rule="evenodd"
                                          d="M0.00172773 0V6.85398C0.00172773 6.85398 -0.133178 9.01207 1.98092 10.8388L13.6912 21.9964L19.7809 21.9181L18.8042 9.88248L16.4951 7.17289L9.23799 0H0.00172773Z"
                                          fill="#7367F0" />
                                    <path opacity="0.06"
                                          fill-rule="evenodd"
                                          clip-rule="evenodd"
                                          d="M7.69824 16.4364L12.5199 3.23696L16.5541 7.25596L7.69824 16.4364Z"
                                          fill="#161616" />
                                    <path opacity="0.06"
                                          fill-rule="evenodd"
                                          clip-rule="evenodd"
                                          d="M8.07751 15.9175L13.9419 4.63989L16.5849 7.28475L8.07751 15.9175Z"
                                          fill="#161616" />
                                    <path fill-rule="evenodd"
                                          clip-rule="evenodd"
                                          d="M7.77295 16.3566L23.6563 0H32V6.88383C32 6.88383 31.8262 9.17836 30.6591 10.4057L19.7824 22H13.6938L7.77295 16.3566Z"
                                          fill="#7367F0" />
                                </svg>
                            </span>
                        </a>
                    </div>
                    <!-- /Logo -->
                    <h3 class="mb-1 fw-bold">Adventure starts here 🚀</h3>
                    <p class="mb-4">Make your app management easy and fun!</p>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @Html.LabelFor(model => model.username, new { @class = "form-label" })
                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.email, new { @class = "form-label" })
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="mb-3 form-password-toggle">
                            @Html.LabelFor(model => model.userpassword, new { @class = "form-label" })
                            <div class="input-group input-group-merge">
                                @Html.EditorFor(model => model.userpassword, new { htmlAttributes = new { @class = "form-control", type = "password", aria_describedby = "password" } })
                                <span class="input-group-text cursor-pointer"><i class="ti ti-eye-off"></i></span>
                            </div>
                        </div>

                        <div class="mb-3 form-password-toggle">
                            @Html.LabelFor(model => model.conformpassword, new { @class = "form-label" })
                            <div class="input-group input-group-merge">
                                @Html.EditorFor(model => model.userpassword, new { htmlAttributes = new { @class = "form-control", type = "password", aria_describedby = "password" } })
                                <span class="input-group-text cursor-pointer"><i class="ti ti-eye-off"></i></span>
                            </div>
                        </div>

                        <button class="btn btn-primary d-grid w-100" type="submit">Sign up</button>
                    }



                    <p class="text-center">
                        <span>Already have an account?</span>
                        <a href="login.html">
                            <span>Sign in instead</span>
                        </a>
                    </p>

                    <div class="divider my-4">
                        <div class="divider-text">or</div>
                    </div>

                    <div class="d-flex justify-content-center">
                        <a href="javascript:;" class="btn btn-icon btn-label-facebook me-3">
                            <i class="tf-icons fa-brands fa-facebook-f fs-5"></i>
                        </a>

                        <a href="javascript:;" class="btn btn-icon btn-label-google-plus me-3">
                            <i class="tf-icons fa-brands fa-google fs-5"></i>
                        </a>

                        <a href="javascript:;" class="btn btn-icon btn-label-twitter">
                            <i class="tf-icons fa-brands fa-twitter fs-5"></i>
                        </a>
                    </div>
                </div>
            </div>
            <!-- /Register -->
        </div>
    </div>
    @Scripts.Render("~/bundles/mainscript2")
    @Scripts.Render("~/bundles/jqurty")
    @Scripts.Render("~/bundles/bootstrap")
</body>
</html>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}







@*@model Freelancer_Marketplace.Entity.usersdata

    @{
        Layout = null;
    }

    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Register</title>
    </head>
    <body>
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>usersdata</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.userid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userpassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userpassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userpassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.profile_picture, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.profile_picture, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.profile_picture, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.registration_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.registration_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.registration_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.last_login_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.last_login_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.last_login_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.is_active, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </body>
    </html>*@


